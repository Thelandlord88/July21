---
// src/components/Header.astro
import { Image } from 'astro:assets';
import logo from '/src/assets/images/logo.svg';

export interface Props {
  suburbs: { name: string; slug: string }[];
}
const { suburbs } = Astro.props;

const defaultSuburb = "Redbank Plains";
---

<header id="main-header" class="bg-white/90 backdrop-blur-lg sticky top-0 z-50 shadow-sm transition-all duration-300">
  <nav class="container mx-auto px-4 sm:px-6 py-3 flex justify-between items-center">
    <!-- Logo -->
    <a href="/" class="group flex items-center gap-2" aria-label="One N Done Bond Clean Home">
      <Image 
        src={logo} 
        alt="One N Done Bond Clean Logo" 
        class="h-12 w-12 transition-transform duration-300 group-hover:scale-105" 
        width="48" 
        height="48" 
        fetchpriority="high" 
      />
      <span class="sr-only md:not-sr-only font-extrabold text-deep-navy text-xl">One N Done</span>
    </a>

    <!-- Desktop Navigation -->
    <div class="hidden lg:flex items-center gap-6">
      <!-- Location Section -->
      <div class="flex items-center gap-3 bg-light-sky px-4 py-2 rounded-full shadow-sm">
        <svg class="w-5 h-5 text-fresh-sky" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
        </svg>
        <span class="text-gray-700">Serving <span id="current-suburb" class="font-semibold text-deep-navy">{defaultSuburb}</span></span>
        
        <!-- Suburb Selector -->
        <div class="suburb-selector relative">
          <select 
            id="suburb-selector-desktop" 
            aria-label="Select your suburb"
            class="appearance-none bg-transparent pl-2 pr-6 py-1 text-gray-700 cursor-pointer focus:outline-none focus:ring-0 border-l border-gray-300"
          >
            {suburbs.map(suburb => <option value={suburb.name}>{suburb.name}</option>)}
          </select>
          <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-1 text-fresh-sky">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
        </div>
      </div>
      
      <!-- Navigation Links -->
      <div class="flex space-x-6 items-center font-medium text-gray-700">
        <a href="/#difference" class="relative py-2 group">
          The Difference
          <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-fresh-sky transition-all duration-300 group-hover:w-full"></span>
        </a>
        <a href="/#services" class="relative py-2 group">
          Services
          <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-fresh-sky transition-all duration-300 group-hover:w-full"></span>
        </a>
        <a href="/#about" class="relative py-2 group">
          About Us
          <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-fresh-sky transition-all duration-300 group-hover:w-full"></span>
        </a>
      </div>
      
      <!-- CTA Button -->
      <a href="/#quote" class="bg-fresh-sky hover:bg-deep-navy text-white font-bold py-2 px-5 rounded-full shadow-md transition-all duration-300 transform hover:scale-105 focus:ring-2 focus:ring-offset-2 focus:ring-fresh-sky">
        Get Quote
      </a>
    </div>

    <!-- Mobile Menu Button -->
    <button 
      id="menu-btn" 
      class="lg:hidden text-gray-800 focus:outline-none focus:ring-2 focus:ring-fresh-sky rounded-md p-2"
      aria-label="Toggle navigation menu" 
      aria-expanded="false" 
      aria-controls="mobile-menu"
    >
      <svg id="menu-icon-open" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
      <svg id="menu-icon-close" class="w-6 h-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </nav>

  <!-- Mobile Menu -->
  <div 
    id="mobile-menu" 
    class="hidden lg:hidden bg-white px-4 py-4 shadow-lg max-h-0 overflow-hidden transition-all duration-300 ease-out"
    aria-hidden="true"
  >
    <div class="p-4 space-y-5">
      <!-- Suburb Selector -->
      <div class="mb-3">
        <label for="suburb-selector-mobile" class="block text-sm font-medium text-gray-700 mb-1">Your Area:</label>
        <div class="relative">
          <select 
            id="suburb-selector-mobile" 
            class="appearance-none w-full bg-white border border-gray-300 rounded-lg pl-4 pr-10 py-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-fresh-sky focus:border-transparent"
          >
            {suburbs.map(s => <option value={s.name}>{s.name}</option>)}
          </select>
          <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-fresh-sky">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
        </div>
      </div>
      
      <!-- Navigation Links -->
      <div class="grid grid-cols-2 gap-3">
        <a href="/#difference" class="py-3 px-4 text-center bg-light-sky text-deep-navy font-medium rounded-lg transition-colors hover:bg-fresh-sky hover:text-white">The Difference</a>
        <a href="/#services" class="py-3 px-4 text-center bg-light-sky text-deep-navy font-medium rounded-lg transition-colors hover:bg-fresh-sky hover:text-white">Services</a>
        <a href="/#about" class="py-3 px-4 text-center bg-light-sky text-deep-navy font-medium rounded-lg transition-colors hover:bg-fresh-sky hover:text-white">About Us</a>
        <a href="/#locations" class="py-3 px-4 text-center bg-light-sky text-deep-navy font-medium rounded-lg transition-colors hover:bg-fresh-sky hover:text-white">Service Area</a>
      </div>
      
      <!-- Contact Buttons -->
      <div class="border-t border-gray-200 pt-4 space-y-3">
        <a href="/#quote" class="block bg-fresh-sky hover:bg-deep-navy text-white text-center font-bold py-3 rounded-lg transition-colors">Get Free Quote</a>
        <a href="tel:0405779420" class="flex items-center justify-center py-3 bg-gray-100 text-deep-navy font-bold rounded-lg transition-colors hover:bg-gray-200">
          <svg class="w-5 h-5 mr-2 text-fresh-sky" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
          </svg>
          0405 779 420
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const defaultSuburb = "Redbank Plains";
    const desktopSelector = document.getElementById('suburb-selector-desktop');
    const mobileSelector = document.getElementById('suburb-selector-mobile');
    const placeholders = document.querySelectorAll('.suburb-placeholder');
    const menuBtn = document.getElementById('menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    const openIcon = document.getElementById('menu-icon-open');
    const closeIcon = document.getElementById('menu-icon-close');
    
    // Function to sanitize input
    const sanitizeForStorage = (str) => {
      return str ? String(str).replace(/[^a-zA-Z0-9\s-]/g, '') : '';
    };

    // Function to update suburb display
    const updateSuburbDisplay = (suburbName) => {
      const name = suburbName || defaultSuburb;
      const sanitizedName = sanitizeForStorage(name);
      
      placeholders.forEach(el => { 
        el.textContent = sanitizedName; 
      });
      
      if (desktopSelector) desktopSelector.value = sanitizedName;
      if (mobileSelector) mobileSelector.value = sanitizedName;
      
      localStorage.setItem('preferredSuburb', sanitizedName);
      document.dispatchEvent(new CustomEvent('suburbChanged', { detail: { name: sanitizedName } }));
    };

    // Function to toggle mobile menu
    const toggleMenu = (shouldOpen) => {
      if (!menuBtn || !mobileMenu || !openIcon || !closeIcon) return;
      
      const isOpen = shouldOpen ?? (menuBtn.getAttribute('aria-expanded') === 'true');
      
      // Update ARIA attributes
      menuBtn.setAttribute('aria-expanded', String(!isOpen));
      mobileMenu.setAttribute('aria-hidden', String(isOpen));
      
      // Toggle icons
      openIcon.classList.toggle('hidden', !isOpen);
      closeIcon.classList.toggle('hidden', isOpen);
      
      // Toggle menu with animation
      mobileMenu.classList.toggle('hidden', isOpen);
      mobileMenu.style.maxHeight = isOpen ? '0' : '500px';
      
      // Prevent body scrolling when menu is open
      document.body.style.overflow = isOpen ? '' : 'hidden';
    };

    // Initialize from localStorage
    const savedSuburb = localStorage.getItem('preferredSuburb');
    updateSuburbDisplay(savedSuburb);

    // Add event listeners
    if (desktopSelector) {
      desktopSelector.addEventListener('change', (e) => {
        updateSuburbDisplay(e.target.value);
      });
    }
    
    if (mobileSelector) {
      mobileSelector.addEventListener('change', (e) => {
        updateSuburbDisplay(e.target.value);
        toggleMenu(true); // Close menu after selection
      });
    }
    
    if (menuBtn) {
      menuBtn.addEventListener('click', () => {
        toggleMenu();
      });
      
      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        if (!mobileMenu.contains(e.target) && !menuBtn.contains(e.target) && !mobileMenu.classList.contains('hidden')) {
          toggleMenu(true);
        }
      });
    }
    
    // Close menu on ESC key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {
        toggleMenu(true);
      }
    });
  });
</script>

<style>
  /* Smooth transitions */
  .suburb-selector-control {
    transition: all 0.2s ease;
  }
  
  .suburb-selector-control:focus {
    box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.3);
    outline: none;
  }
  
  /* Hover effects for navigation links */
  nav a:hover {
    color: #0ea5e9;
  }
  
  /* Mobile menu animation */
  #mobile-menu {
    transition: max-height 0.4s ease-out, opacity 0.3s ease;
  }
  
  /* Ensure proper spacing on mobile */
  @media (max-width: 1023px) {
    #mobile-menu {
      position: fixed;
      top: 80px;
      left: 0;
      right: 0;
      z-index: 40;
      overflow-y: auto;
      max-height: calc(100vh - 80px);
    }
  }
</style>